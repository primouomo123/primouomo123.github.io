header {
    background-color: black;
    color: white;
    font-size: 1.2em;
    padding: 1em;
    margin-bottom: 1em;
    position: fixed;
    text-align: center;
    width: 100%;
    top: 0;
    z-index: 1000;
}

header h1 {
    font-weight: bold;
}

.navbar {
    font-size: 1.2em;
    padding: 1em;
    width: 100%;
}
.navbar ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

.navbar ul li {
    display: inline;
    margin: 0 1em;
}

.navbar a {
    color: white;
}

.main-content {
    margin-top: 13em;
    padding-top: 1em;
    background-color: rgb(243, 244, 246);
}

.main-content section {
    padding: 2em 1em;
}

.main-content #about-me {
    margin-bottom: 0.5em;
}

.main-content #about-me h2 {
    font-size: 2em;
    font-family: bold;
    text-align: center;
}

.main-content #about-me p {
    font-size: 1.2em;
    color: #666;
    text-align: justify;
}

.main-content #about-me h3 {
    font-size: 1.3em;
    text-align: center;
}

/* I've made My Skills section within About Me Section to be displayed as Flexbox, so I can show it the way I wanted.
Also, I wanted to practice more about Flexbox Layout */
.main-content #about-me .skills {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    padding: 2em;
}

.main-content #about-me ol {
    font-size: 1.3em;
    color: #666;
}

#project-showcase {
    margin-bottom: 0.5em;
}

#project-showcase h2 {
    font-size: 2em;
    text-align: center;
}

/* The project container is displayed as a Grid Layout, as requested in this Lab */
.project-container {
    display: grid;
    /* Below, I've used repeat in order to repeat the column definition.
    Autofit automatically fits as many columns as possible in the row, based on available space.
    and minmax(250px, 1fr) makes each column be at least 250px wide, but can grow up to take one fractional unit ofavailable space
    (sharing it equally with other columns). All of this is to make this section be as responsive as possible*/
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1em;
    align-content: space-around;
    padding: 1em;
}

.project {
    background-color: #fff;
    border: 1px solid #ddd;
    margin: 1em;
    padding: 1em;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    box-sizing: border-box;
    transition: transform 0.3s;
}

.project img {
    width: 100%;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
}

#project-showcase .project-container .project h3 {
    font-weight: bold;
    margin-bottom: 0.5em;
    text-align: center;
    font-size: 2em;
}

#project-showcase .project-container .project p {
    margin-bottom: 0.5em;
    color: #666;
    text-align: justify;
    font-size: 1.5em;
}

#project-showcase .project-container .project a {
    display: block; /* I've changed this element to be displayed as block, so I can align the text to the center. */
    text-align: center;
}

.project:hover {
    transform: scale(1.05);
}

/* This is to make just 1 column when the max-width of a screen is 768px. Just a way to practice media queries because I had already made
the Grid Layout fully responsive. */
@media (max-width: 768px) {
    .project-container {
    grid-template-columns: repeat(1, minmax(250px, 1fr));
    }
}